server:
  port: 8081
spring:
  application:
    name: landscape
  kafka:
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  datasource:
    url: jdbc:postgresql://localhost:5432/vogorode
    username: username
    password: password
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: com.tinkoffacademy.landscape.config.STAreaPostgisDialect
    defer-datasource-initialization: true
  liquibase:
    enabled: false
  sql:
    init:
      mode: always
management:
  endpoints:
    web:
      exposure:
        include: info, prometheus
      base-path:
      path-mapping:
        prometheus: /metrics
        info: /actuator/info
grpc:
  client:
    handyman:
      address: 'static://127.0.0.1:9091'
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext
    rancher:
      address: 'static://127.0.0.1:9093'
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext
logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
handyman:
  baseUrl: http://localhost:8080
rancher:
  baseUrl: http://localhost:8082