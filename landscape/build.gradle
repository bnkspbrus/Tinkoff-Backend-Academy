buildscript {
    ext {
        // https://github.com/grpc/grpc-java/releases
        grpcVersion = '1.53.0'
        // https://github.com/protocolbuffers/protobuf/releases
        protobufVersion = '3.22.0'
        protobufGradlePluginVersion = '0.9.2'

        // https://github.com/spring-projects/spring-boot/releases
        springBootVersion = '2.7.8'
        springBootGrpcVersion = '2.14.0.RELEASE'
        lombokPluginVersion = '6.6.2'
        mockitoVersion = '1.10.19'
    }
}


plugins {
    id("java")
    id("idea")
    id("org.springframework.boot") version "${springBootVersion}"
    id("io.spring.dependency-management") version "1.1.0"
    id("com.google.protobuf") version "${protobufGradlePluginVersion}"
    id("io.freefair.lombok") version "${lombokPluginVersion}"
}

repositories {
    mavenCentral()
}

group = 'com.tinkoffacademy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

dependencies {
    implementation("io.grpc:grpc-netty-shaded")
    implementation("io.grpc:grpc-protobuf")
    implementation("io.grpc:grpc-stub")
    if (JavaVersion.current().isJava9Compatible()) {
        // Workaround for @javax.annotation.Generated
        // see: https://github.com/grpc/grpc-java/issues/3633
        implementation 'jakarta.annotation:jakarta.annotation-api'
    }
    implementation("net.devh:grpc-client-spring-boot-starter:${springBootGrpcVersion}")
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-web")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    runtimeOnly("io.micrometer:micrometer-registry-prometheus")
    testImplementation("io.grpc:grpc-testing:${grpcVersion}")
    testImplementation("net.devh:grpc-server-spring-boot-starter:${springBootGrpcVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

springBoot {
    buildInfo()
}

tasks.named('test') {
    useJUnitPlatform()
}